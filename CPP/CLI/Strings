# Writing out put strings
System::String^ path = "filename.txt"

System::IO::Streamwriter? sw = gcnew  sw(path, bool append_option); // ie sw(path, true) for file append write.

- as far as I know, there is no combined variable text + variable write.
sw->Write("text\n");
sw->Write(System::DateTime::now); to write strings


# Converting System::string^ to std::string and vice-versa

#include <stdlib.h>
#include <string.h>
#include <msclr\marshal_cppstd.h> // need this library
//..
using namespace msclr::interop;
//..
System::String^ clrString = (TextoDeBoton);
std::string stdString = marshal_as<std::string>(clrString); //String^ to std
//System::String^ myString = marshal_as<System::String^>(MyBasicStirng); //std to String^
prueba.CopyInfo(stdString); //MyMethod
//..
//Where: String^ = TextoDeBoton;
//and stdString is a "normal" string;

# LPCWSTR conversion
System::String^  initMsg = L"Initial message"; // Create Start message
	std::string stdString = msclr::interop::marshal_as<std::string>(initMsg);

	std::string blah = "blah";
	//std::wstring wsStrVar = ( blah.begin(), blah.end() );

	std::string input = "whatever";
////computing wchar size:
int wSize = MultiByteToWideChar (CP_ACP, 0, (LPCSTR) input.c_str (), -1, 0, 0);

//allocating memory for wchar:
LPWSTR output = new WCHAR[wSize];

//conversion from string to LPWSTR:
MultiByteToWideChar (CP_ACP, MB_PRECOMPOSED , (LPCSTR) input.c_str (), -1, output, wSize);

	LPCWSTR stemp;
	stemp = output;


	dlg->SetDlgItemTextW(IDD_DIALOG1, stemp );
